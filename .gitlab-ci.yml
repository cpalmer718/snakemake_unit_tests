# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: cpalmer718/snakemake-gcc

stages:
  - build
  - test

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build_and_tap:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  script:
    - ./generate.bash
    - ./configure --with-boost=$CONDA_PREFIX --with-boost-libdir=$CONDA_PREFIX/lib
    - make -j2
    - ./snakemake_unit_tests.out -h
    - ./snakemake_unit_tests.out --update-all -i inst -l tests/examples/test1/input/run.log -o tests/examples/test1/output -p tests/examples/test1/input -s tests/examples/test1/input/workflow/Snakefile 
    - pytest tests/examples/test1/output/unit
    - rm -Rf tests/examples/test1/output
    - make -j2 check
  artifacts:
    paths:
      - snakemake_unit_tests.out

test_cppunit:
  stage: test
  script:
    - echo "placeholder"
