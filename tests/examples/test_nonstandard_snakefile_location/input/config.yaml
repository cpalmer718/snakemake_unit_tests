# output-test-dir: [arg]
## this controls the location of snakemake_unit_tests output test directories.
## for snakemake --generate-unit-tests, this defaults to '.tests' and all
## tests are reported to '.tests/unit'; mirroring that behavior, your tests
## will be emitted under 'arg/unit'. note that 'arg' need not exist already,
## but if it does exist, contents under 'arg/unit' are likely to be overwritten
## or deleted, so be cautious.
## note that if you specify --output-test-dir at the command line, it will
## *supercede* the setting in this file.
output-test-dir: tests/examples/test_nonstandard_snakefile_location/output

# snakefile: [arg]
## the name of (and path to) the snakefile used to successfully run the pipeline
## for which you want tests. this argument will look something like
## '/path/to/pipeline/workflow/Snakefile' or '../pipeline/workflow/Snakefile'.
## though the snakefile doesn't have to be in a 'workflow' subdirectory,
## certain internal logic assumes this structure as of pre-alpha.
## note that if you specify --snakefile at the command line, it will
## *supercede* the setting in this file.
snakefile: tests/examples/test_nonstandard_snakefile_location/input/Snakefile

# pipeline-dir: [arg]
## installation directory of pipeline for which you want tests. this is needed
## to deal with relative paths for directories and files you want added
## into the minimal test workspaces. if you do not specify this parameter,
## internal logic will set it to [{snakefile directory}/..], assuming
## the snakefile is in a one-deep subdirectory of the pipeline.
## note that if you specify --pipeline-dir at the command line, it will
## *supercede* the setting in this file.
pipeline-top-dir: tests/examples/test_nonstandard_snakefile_location/input
pipeline-run-dir: .

# inst-dir: [arg]
## location on your system of the snakemake_unit_tests subdirectory 'inst'.
## this folder contains schematic pytest files that will be mildly modified
## and installed into your test workspaces, and which can be customized for
## different test behaviors if you prefer. if you're running snakemake_unit_tests
## from a cloned directory from GitLab, this can be simply 'inst'; otherwise
## if you've cloned snakemake_unit_tests but are running it elsewhere, use
## /path/to/snakemake_unit_tests/inst. eventually, once this is in conda,
## you should set this to $CONDA_PREFIX/share/snakemake_unit_tests/inst.
## note that if you specify --inst-dir at the command line, it will
## *supercede* the setting in this file.
inst-dir: inst

# snakemake-log: [arg]
## log file from successful run of your pipeline, off of which you
## are generating unit tests. this will probably be something like
## '../path/to/pipeline/my.log' or equivalent. this is most generally
## the literal output of `snakemake -nF > my.log`.
## note that the log file controls which rules are considered for
## generating tests. if you're having issues, or if you have two logs
## because a pipeline broke halfway through and you fixed it, or something
## like that, you can go into the log and add or remove rules as you
## see fit; however, that can be a somewhat error-prone process.
## note that if you specify --snakemake-log at the command line,
## it will *supercede* the setting in this file.
snakemake-log: tests/examples/test_nonstandard_snakefile_location/input/run.log
